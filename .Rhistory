tb2w <- c(i, j)
}
}
tb2w
tb2w <-NULL
for (i in 1:(f-1)){
for (j in (i+1):f){
tb2w <- rbind(tb2w, c(i, j))
}
}
tb2w
expected_nrows <- f*(f-1)/2
expected_nrows
# expected_nrows <- f*(f-1)/2
tb3w <-NULL
for (i in 1:(f-1)){
for (j in (i+1):f){
for (k in 1:f)
tb3w <- rbind(tb2w, c(i, j, k))
}
}
tb3w
# expected_nrows <- f*(f-1)/2
tb3w <-NULL
for (i in 1:(f-1)){
for (j in (i+1):f){
for (k in 1:f)
tb3w <- rbind(tb3w, c(i, j, k))
}
}
tb3w
tb2w
tb3w
# expected_nrows <- f*(f-1)/2
tb3w <-NULL
for (i in 1:(f-1)){
for (j in (i+1):f){
for (k in (j+1):f)
tb3w <- rbind(tb3w, c(i, j, k))
}
}
tb3w
tb3w <-NULL
for (i in 1:(f-2)){
for (j in (i+1):(f-1)){
for (k in (j+1):f)
tb3w <- rbind(tb3w, c(i, j, k))
}
}
tb3w
f <- 4 # n of factors
# expected_nrows <- f*(f-1)/2
tb4w <-NULL
for (i in 1:(f-3)){
for (j in (i+1):(f-2)){
for (k in (j+1):(f-1)){
for (l in (k+1):(f)){
tb3w <- rbind(tb3w, c(i, j, k, l))
}
}
}
}
tb4w
# four way
f <- 4 # n of factors
# expected_nrows <- f*(f-1)/2
tb4w <-NULL
for (i in 1:(f-3)){
for (j in (i+1):(f-2)){
for (k in (j+1):(f-1)){
for (l in (k+1):(f)){
tb3w <- rbind(tb4w, c(i, j, k, l))
}
}
}
}
tb4w
f <- 4 # n of factors
# expected_nrows <- f*(f-1)/2
tb4w <-NULL
for (i in 1:(f-3)){
for (j in (i+1):(f-2)){
for (k in (j+1):(f-1)){
for (l in (k+1):(f)){
tb4w <- rbind(tb4w, c(i, j, k, l))
}
}
}
}
tb4w
tb3w
# expected_nrows <- f*(f-1)/2
tb3w <-NULL
for (i in 1:(f-2)){
for (j in (i+1):(f-1)){
for (k in (j+1):f)
tb3w <- rbind(tb3w, c(i, j, k))
}
}
tb3w
tb2w[,1]
paste0(tb2w[,1], tb2w[,2])
two_way <- paste0(tb2w[,1], tb2w[,2])
two_way <- paste0(tb2w[,1], 'x', tb2w[,2])
two_way
two_way <- paste0(tb2w[,1], 'x', tb2w[,2], sep=' ')
two_way
two_way <- paste(tb2w[,1], 'x', tb2w[,2])
two_way
two_way <- as.data.frame(paste(tb2w[,1], 'x', tb2w[,2]))
two_way
name(two_way) <- 'var1'
two_way
colnames(two_way) <- 'var1'
two_way
three_way <- as.data.frame(paste(tb3w[,1], 'x', tb3w[,2], 'x', tb3w[,3]))
colnames(three_way) <- 'var1'
three_way
four_way <- as.data.frame(paste(tb4w[,1], 'x', tb4w[,2], 'x', tb4w[,3], 'x', tb4w[,4]))
colnames(four_way) <- 'var1'
rbind(two_way, three_way, four_way)
var1 <- seq(1:4)
var1
rbind(var1, two_way, three_way, four_way)
var1
var1 <- as.data.frame(seq(1:4))
var1
rbind(var1, two_way, three_way, four_way)
two_way
var1
one_way <- as.data.frame(seq(1:4))
names(one_way) <- 'var1'
rbind(one_way, two_way, three_way, four_way)
anova_tbl <- rbind(one_way, two_way, three_way, four_way)
all_effects <- rbind(one_way, two_way, three_way, four_way)
gsub('1', 'N', all_effects[,1])
all_effects <- gsub('1', 'N', all_effects[,1])
all_effects
all_effects <- gsub('2', 'loadings', all_effects[,1]) # sample size
all_effects <- gsub('1', 'N', all_effects) # sample size
all_effects
all_effects <- gsub('2', 'loadings', all_effects) # sample size
all_effects
all_effects <- gsub('3', 'loadings', all_effects) # skewness
all_effects
all_effects <- rbind(one_way, two_way, three_way, four_way)
all_effects
all_effects <- gsub('1', 'N', all_effects) # sample size
all_effects <- gsub('2', 'loadings', all_effects) # loadings
all_effects <- gsub('3', 'skewness', all_effects) # skewness
all_effects <- gsub('4', 'theta distribution', all_effects) # skewness
all_effects
all_effects
all_effects <- rbind(one_way, two_way, three_way, four_way)
all_effects <- gsub('1', 'N', all_effects) # sample size
all_effects
all_effects <- as.data.frame(gsub('1', 'N', all_effects) # sample size)
all_effects
all_effects <- rbind(one_way, two_way, three_way, four_way)
all_effects <- gsub('1', 'N', all_effects[,1]) # sample size
all_effects <- gsub('2', 'loadings', all_effects) # loadings
all_effects <- gsub('3', 'skewness', all_effects) # skewness
all_effects <- gsub('4', 'theta distribution', all_effects) # theta distribution
all_effects
all_effects <- as.data.frame(all_effects
all_effects
all_effects <- as.data.frame(all_effects)
all_effects
?write.csv
write.csv(all_effects,
file = "C:/Users/shh6304/Google Drive/CLASSES/0000_Dissertation/My potential proposal on MIRT/Ch3/Ch3 accompanion/all_effects.csv")
# Test simdata_grm
library(AUTTT)
?simdata_grm
# n. of dimensions = 3
mean_vec <- c(-0.1, 0, 0.1) # mean vector for each dimension
sd_vec <- c(0.95, 0.98, 1.1) # sd vector for each dimension
f_cor <- c(0.3, 0.5, 0.75) # interfactor correlation vector
# convert the cor. vector to cor.matrix
# create theta values
# 2-multivariate normal theta with three dimensions
theta1 <- create_theta_mvn(size = 300,
mean_vec = mean_vec,
sd_vec = sd_vec,
ifcor_vec = f_cor,
seed_num = 45678)
theta1$scaled.X
set.seed(1234)
nvar <- 21
lambda <- runif(nvar, 0.8, 0.95) # loadings for 21 items
cat_prob2 <- c(0.04, 0.06, 0.11, 0.37, 0.42) # m. skewed prob.
temp <- TSK(n=300, res_prop = cat_prob2)
T2 <- temp$thresholds
# Convert to IRT parameters
# A vector of item discrimination
a_vec <- lambda/sqrt(1-lambda^2)
# threshold matrix
thresholds_m <- matrix(rep(T2, nvar),
nrow = nvar,
ncol=length(T2),
byrow = TRUE)
# intercept parameters
d_vec <- thresholds_m/sqrt(1-lambda^2)
# Test simdata_grm
library(AUTTT)
temp <- TSK(n=300, res_prop = cat_prob2)
library(AUTTT)
temp <- TSK(n=300, res_prop = cat_prob2)
?TSK
set.seed(1234)
nvar <- 21
lambda <- runif(nvar, 0.8, 0.95) # loadings for 21 items
cat_prob2 <- c(0.04, 0.06, 0.11, 0.37, 0.42) # m. skewed prob.
temp <- TSK(n=300, res_prop = cat_prob2)
T2 <- temp$thresholds
rm("TSK")
set.seed(1234)
nvar <- 21
lambda <- runif(nvar, 0.8, 0.95) # loadings for 21 items
cat_prob2 <- c(0.04, 0.06, 0.11, 0.37, 0.42) # m. skewed prob.
temp <- TSK(n=300, res_prop = cat_prob2)
T2 <- temp$thresholds
# Convert to IRT parameters
# A vector of item discrimination
a_vec <- lambda/sqrt(1-lambda^2)
# threshold matrix
thresholds_m <- matrix(rep(T2, nvar),
nrow = nvar,
ncol=length(T2),
byrow = TRUE)
# intercept parameters
d_vec <- thresholds_m/sqrt(1-lambda^2)
setwd("C:/Users/shh6304/Documents/My Documents/test_grm")
test1 <- simdata_grm(model = list(c(1,2,3,4,5, 6, 7),
c(8, 9, 10, 11, 12, 13, 14),
c(15, 16, 17, 18, 19, 20, 21)),
theta_matrix = theta1$scaled.X,
a = a_vec,
d = d_vec,
N = 300,
R = 2,
method = "N",
file_dir = getwd(),
file_prefix = "test1")
test1$res_prob
test1$avg_res_prob
simdata_grm
#install.packages('devtools')
library(devtools) # for creating an R package
# tools for documenting your functions
#install.packages('roxygen2')
library(roxygen2) # for documentation
#install.packages("Rdpack")
library("Rdpack") # for adding references
# set project directory
# This is to make sure we work in the right project folder
proj_set("C:/Users/shh6304/Documents/AUTTT", force=FALSE)
# run the function below. #
setwd("C:/Users/shh6304/Documents/AUTTT")
document()
# install from Git
library(devtools)
mytoken <- "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"
install_github("Boklauth/AUTTT", auth_token = mytoken)
mytoken <- "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"
install_github("Boklauth/AUTTT", auth_token = mytoken)
mytoken <- "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"
install_github("Boklauth/AUTTT", auth_token = mytoken)
install_github("Boklauth/AUTTT")
# Test simdata_grm
library(AUTTT)
# n. of dimensions = 3
mean_vec <- c(-0.1, 0, 0.1) # mean vector for each dimension
sd_vec <- c(0.95, 0.98, 1.1) # sd vector for each dimension
f_cor <- c(0.3, 0.5, 0.75) # interfactor correlation vector
# convert the cor. vector to cor.matrix
# create theta values
# 2-multivariate normal theta with three dimensions
theta1 <- create_theta_mvn(size = 300,
mean_vec = mean_vec,
sd_vec = sd_vec,
ifcor_vec = f_cor,
seed_num = 45678)
theta1$scaled.X
# CFA-OV parameters
set.seed(1234)
nvar <- 21
lambda <- runif(nvar, 0.8, 0.95) # loadings for 21 items
cat_prob2 <- c(0.04, 0.06, 0.11, 0.37, 0.42) # m. skewed prob.
temp <- TSK(n=300, res_prop = cat_prob2)
T2 <- temp$thresholds
# Convert to IRT parameters
# A vector of item discrimination
a_vec <- lambda/sqrt(1-lambda^2)
# threshold matrix
thresholds_m <- matrix(rep(T2, nvar),
nrow = nvar,
ncol=length(T2),
byrow = TRUE)
# intercept parameters
d_vec <- thresholds_m/sqrt(1-lambda^2)
setwd("C:/Users/shh6304/Documents/My Documents/test_grm")
test1 <- simdata_grm(model = list(c(1,2,3,4,5, 6, 7),
c(8, 9, 10, 11, 12, 13, 14),
c(15, 16, 17, 18, 19, 20, 21)),
theta_matrix = theta1$scaled.X,
a = a_vec,
d = d_vec,
N = 300,
R = 2,
method = "N",
file_dir = getwd(),
file_prefix = "test1")
test1$res_prob
test1$avg_res_prob
model1 <- list(c(1,2,3,4,5, 6, 7),
c(8, 9, 10, 11, 12, 13, 14),
c(15, 16, 17, 18, 19, 20, 21))
test1 <- simdata_grm(model = model1,
theta_matrix = theta1$scaled.X,
a = a_vec,
d = d_vec,
N = 300,
R = 2,
method = "N",
file_dir = getwd(),
file_prefix = "test1")
test1$res_prob
test1$avg_res_prob
test1 <- simdata_grm(model = model1,
# theta_matrix = unscaled_3f_mvn300,
theta_matrix = scaled_3f_mvn300,
a = a_vec,
d = d_vec,
N = 300,
R = 50,
method = "U",
file_dir = getwd(),
file_prefix = "test1")
test1 <- simdata_grm(model = model1,
# theta_matrix = unscaled_3f_mvn300,
theta_matrix = theta1$scaled.X,
a = a_vec,
d = d_vec,
N = 300,
R = 50,
method = "U",
file_dir = getwd(),
file_prefix = "test1")
# response probabilities
test1$res_prob
test1$avg_res_prob
test1$avg_res_prob
test1 <- simdata_grm(model = model1,
theta_matrix = theta1$scaled.X,
a = a_vec,
d = d_vec,
N = 300,
R = 2,
method = "N",
file_dir = getwd(),
file_prefix = "test1")
test1$avg_res_prob
test2 <- simdata_grm(model = model1,
# theta_matrix = unscaled_3f_mvn300,
theta_matrix = theta1$scaled.X,
a = a_vec,
d = d_vec,
N = 300,
R = 50,
method = "U",
file_dir = getwd(),
file_prefix = "test1")
# response probabilities
test2$res_prob
test2$avg_res_prob
test1$avg_res_prob
# 1 dimension of theta
scaled_1f_mvn300 <- theta1$scaled.X[,1]
test3 <- simdata_grm(model = list(seq(1,12)),
theta_matrix = scaled_1f_mvn300,
a = a_vec,
d = d_vec,
N = 300,
R = 5,
method = "N",
file_dir = getwd(),
file_prefix = "test1")
warnings()
test3 <- simdata_grm(model = list(seq(1,21)),
theta_matrix = scaled_1f_mvn300,
a = a_vec,
d = d_vec,
N = 300,
R = 5,
method = "N",
file_dir = getwd(),
file_prefix = "test1")
test3$
# Binary responses
# One factor model
cat_prob2 <- c(0.4, 0.6) # m. skewed prob.
test3$avg_res_prob
cat_prob2 <- c(0.4, 0.6) # m. skewed prob.
temp <- TSK(n=300, res_prop = cat_prob2)
T2 <- temp$thresholds
# Convert to IRT parameters
# A vector of item discrimination
a_vec <- lambda/sqrt(1-lambda^2)
# a vector of item difficulty
nvar <- length(a_vec)
thresholds_m <- matrix(rep(T2, nvar),
nrow = nvar,
ncol=1,
byrow = TRUE)
# intercept parameters
d_vec <- thresholds_m/sqrt(1-lambda^2)
setwd("C:/Users/shh6304/Documents/My Documents/test_grm")
simdata_grm(model = list(seq(1,21)),
theta_matrix = unscaled_1f_mvn300,
a = a_vec,
d = d_vec,
N = 300,
R = 5,
method = "N",
file_dir = getwd(),
file_prefix = "test1")
simdata_grm(model = list(seq(1,21)),
theta_matrix = scaled_1f_mvn300,
a = a_vec,
d = d_vec,
N = 300,
R = 5,
method = "N",
file_dir = getwd(),
file_prefix = "test1")
simdata_grm(model = list(seq(1,21)),
theta_matrix = scaled_1f_mvn300,
a = a_vec,
d = d_vec,
N = 300,
R = 50,
method = "N",
file_dir = getwd(),
file_prefix = "test1")
# set project directory
# This is to make sure we work in the right project folder
proj_set("C:/Users/shh6304/Documents/AUTTT", force=FALSE)
setwd("C:/Users/shh6304/Documents/AUTTT")
document()
# install from Git
library(devtools)
# install from Git
library(devtools)
install_github("Boklauth/AUTTT")
# 1-configure your git ####
library(usethis)
use_git_config(user.name = "Bo Klauth", user.email="bklauth@gmail.com")
# 1-configure your git ####
library(usethis)
use_git_config(user.name = "Bo Klauth", user.email="bklauth@gmail.com")
# tools for making an R function
#install.packages('devtools')
library(devtools) # for creating an R package
# tools for documenting your functions
#install.packages('roxygen2')
library(roxygen2) # for documentation
#install.packages("Rdpack")
library("Rdpack") # for adding references
# get project director
proj_get()
# set project directory
# This is to make sure we work in the right project folder
proj_set("C:/Users/shh6304/Documents/AUTTT", force=FALSE)
# set project directory
# This is to make sure we work in the right project folder
proj_set("C:/Users/shh6304/Google Drive/000_Projects/8_creating R packages/AUTTT", force=FALSE)
# run the function below. #
setwd("C:/Users/shh6304/Google Drive/000_Projects/8_creating R packages/AUTTT")
document()
# install from Git
library(devtools)
install_github("Boklauth/AUTTT")
# install from Git
library(devtools)
install_github("Boklauth/AUTTT")
# install from Git
library(devtools)
install_github("Boklauth/AUTTT")
# install from Git
library(devtools)
install_github("Boklauth/AUTTT")
install.packages("psych")
# install from Git
library(devtools)
install_github("Boklauth/AUTTT")
# install from Git
library(devtools)
install_github("Boklauth/AUTTT")
# specify lib location to be installed
R_LIBS_SITE = "C:/Program Files/R/R-4.1.2/library"
# install from Git
library(devtools)
install_github("Boklauth/AUTTT")
library(AUTTT)
remove.packages("AUTTT", lib="~/R/win-library/4.1")
# install from Git
library(devtools)
install_github("Boklauth/AUTTT")
# install from Git
library(devtools)
install_github("Boklauth/AUTTT")
