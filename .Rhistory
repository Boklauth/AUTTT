gather_theta <- function(main_dir,
cell_folders,
start_cell,
end_cell,
est_folder,
my_pattern){
fscores_allcells <- NULL
for (folder_index in start_cell:end_cell){
fscores_per_cell <- NULL
dat_files <- list.files(path = paste0(main_dir, "/", cell_folders[folder_index],
"/", est_folder),
pattern = my_pattern)
for (i in 1:length(dat_files)){
num_r <- str_split_fixed(dat_files[i], "_", 4)[,3]
num_r2 <- as.numeric(gsub("rep", "", num_r))
fscores_df <-  try(read.table(paste0(main_dir, "/", cell_folders[folder_index],
"/", est_folder,
"/", dat_files[i])), silent=TRUE)
if (!('try-error' %in% class(fscores_df))) {
# if (dim(fscores_df)[2]!= 0){
fscores <- fscores_df[,-c(1:21)]
names(fscores)<- c("f1", "f1_se", "f2", "f2_se", "f3", "f3_se")
r <- rep(num_r2, nrow(fscores))
pid <- seq(1, nrow(fscores))
fscores2 <- cbind(r,
estimator = est_folder,
pid,
fscores)
fscores_per_cell <- rbind(fscores_per_cell, fscores2)
fscores_per_cell2 <- cbind(cell = cell_folders[folder_index],
fscores_per_cell)
}
}
# else {next}
} # end folder iteration
fscores_allcells <- rbind(fscores_per_cell2, fscores_allcells)
fscores_allcells <- fscores_allcells %>%
arrange(cell, r, pid)
return("fscores" = fscores_allcells)
}
main_dir2 <- "G:/My Drive/CLASSES/0000_Dissertation/2_data_generation_production/data/t7_output"
output_dir <- "G:/My Drive/CLASSES/0000_Dissertation/2_data_generation_production/output/mplus_output"
load(paste0(main_dir2, "/folders.Rdata"))
folders
# MML theta ####
MML_theta <- gather_theta(main_dir = main_dir2,
cell_folders = folders,
start_cell = 3,
end_cell = 3,
est_folder = "ML_probit",
my_pattern = "fscores.dat")
head(MLR_theta)
MML_theta
nrow(MML_theta)
View(MML_theta)
load(paste0(output_dir, "/WLSMV_theta.Rdata"))
View(WLSMV_theta)
load(paste0(output_dir, "/ULSMV_theta.Rdata"))
View(ULSMV_theta)
View(WLSMV_theta)
load(paste0(output_dir, "/MLR_theta.Rdata"))
# Need to rerun?
MLR_theta <- gather_theta(main_dir = main_dir2,
cell_folders = folders,
start_cell = 1,
end_cell = 24,
est_folder = "MLR",
my_pattern = "fscores.dat")
# # Check to verify the results
# head(MLR_theta)
# nrow(MLR_theta)
#
# MLR_theta %>% select(r) %>% distinct
# MLR_theta %>% select(cell) %>% distinct
# Save output
save(MLR_theta, file  = paste0(output_dir,
"/MLR_theta.Rdata"))
head(MLR_theta)
nrow(MLR_theta)
View(MLR_theta)
# Max rows shoudl be
(300*8+600*8+1200*8)*500
tab(MLR_theta$cell, MLR_theta$r)
table(MLR_theta$cell, MLR_theta$r)
as.data.frame(table(MLR_theta$cell, MLR_theta$r))
MLR_check <- as.data.frame(table(MLR_theta$cell, MLR_theta$r))
View(MLR_check)
gather_theta <- function(main_dir,
cell_folders,
start_cell,
end_cell,
est_folder,
my_pattern){
fscores_allcells <- NULL
for (folder_index in start_cell:end_cell){
fscores_per_cell <- NULL
dat_files <- list.files(path = paste0(main_dir, "/", cell_folders[folder_index],
"/", est_folder),
pattern = my_pattern)
for (i in 1:length(dat_files)){
num_r <- str_split_fixed(dat_files[i], "_", 4)[,3]
num_r2 <- as.numeric(gsub("rep", "", num_r))
fscores_df <-  try(read.table(paste0(main_dir, "/", cell_folders[folder_index],
"/", est_folder,
"/", dat_files[i])), silent=TRUE)
if (!('try-error' %in% class(fscores_df))) {
# if (dim(fscores_df)[2]!= 0){
fscores <- fscores_df[,-c(1:21)]
names(fscores)<- c("f1", "f1_se", "f2", "f2_se", "f3", "f3_se")
r <- rep(num_r2, nrow(fscores))
pid <- seq(1, nrow(fscores))
fscores2 <- cbind(r,
estimator = est_folder,
pid,
fscores)
fscores_per_cell <- rbind(fscores_per_cell, fscores2)
fscores_per_cell2 <- cbind(cell = cell_folders[folder_index],
fscores_per_cell)
}
}
# else {next}
fscores_allcells <- rbind(fscores_per_cell2, fscores_allcells)
} # end folder iteration
fscores_allcells <- fscores_allcells %>%
arrange(cell, r, pid)
return("fscores" = fscores_allcells)
} # end function
main_dir2 <- "G:/My Drive/CLASSES/0000_Dissertation/2_data_generation_production/data/t7_output"
output_dir <- "G:/My Drive/CLASSES/0000_Dissertation/2_data_generation_production/output/mplus_output"
load(paste0(main_dir2, "/folders.Rdata"))
folders
# Need to rerun?
MLR_theta <- gather_theta(main_dir = main_dir2,
cell_folders = folders,
start_cell = 1,
end_cell = 2,
est_folder = "MLR",
my_pattern = "fscores.dat")
head(MLR_theta)
MLR_theta %>% select(r) %>% distinct
MLR_theta %>% select(cell) %>% distinct
MLR_check <- as.data.frame(table(MLR_theta$cell, MLR_theta$r))
View(MLR_check)
MLR_theta <- gather_theta(main_dir = main_dir2,
cell_folders = folders,
start_cell = 1,
end_cell = 24,
est_folder = "MLR",
my_pattern = "fscores.dat")
# # Check to verify the results
# head(MLR_theta)
# nrow(MLR_theta)
#
# MLR_theta %>% select(r) %>% distinct
# MLR_theta %>% select(cell) %>% distinct
# Save output
save(MLR_theta, file  = paste0(output_dir,
"/MLR_theta.Rdata"))
# Max rows shoudl be
(300*8+600*8+1200*8)*500
save(MLR_theta, file  = paste0(output_dir,
"/MLR_theta.Rdata"))
execute_mplus_scripts()
execute_mplus_scripts()
execute_mplus_scripts
mplus_montecarlo_analysis_grm
# Compute RB of theta values
# Set main directory for theta
main_dir <- "G:/My Drive/CLASSES/0000_Dissertation/2_data_generation_production"
library(tidyverse)
load(paste0(main_dir, "/output/mplus_output/joined_theta.Rdata"))
head(RB_theta)
head(joined_theta)
joined_theta <- joined_theta %>%
group_by(uid, estimator, subiid) %>%
mutate(ARB_theta_r = mean(ARB_theta))
head(joined_theta)
joined_theta <- joined_theta %>%
group_by(uid, estimator, subiid) %>%
mutate(ARB_theta_r = mean(ARB_theta)) %>%
select(uid, estimator, subiid, ARB_theta_r)
head(joined_theta)
View(joined_theta)
View(joined_theta)
# Average across replications
joined_theta <- joined_theta %>%
group_by(uid, estimator, subiid) %>%
mutate(ARB_theta_r = mean(ARB_theta)) %>%
select(uid, estimator, subiid, ARB_theta_r) %>%
distinct()
load(paste0(main_dir, "/output/mplus_output/joined_theta.Rdata"))
head(joined_theta)
# Average across replications
RB_theta <- joined_theta %>%
group_by(uid, estimator, subiid) %>%
mutate(ARB_theta_r = mean(ARB_theta)) %>%
select(uid, estimator, subiid, ARB_theta_r) %>%
distinct()
View(RB_theta)
summary(RB_theta)
head(joined_theta)
# Remove all objects in the Global Environment
rm(list = ls())
library(tidyverse)
# load pop thetas ####
load(paste0(main_dir, "/output/thetas", "/poptheta_all.RData"))
# Compute RB of theta values
# Set main directory for theta
main_dir <- "G:/My Drive/CLASSES/0000_Dissertation/2_data_generation_production"
# load pop thetas ####
load(paste0(main_dir, "/output/thetas", "/poptheta_all.RData"))
# Load estimated theta ####
load(paste0(main_dir, "/output/mplus_output/est_theta_all2.Rdata"))
joined_theta <- left_join(est_theta_all2, poptheta_all,
by = c("unicom"),
suffix = c("_est", "_pop"))%>%
mutate(RB_f1 = (f1_est - f1_pop)/f1_pop,
RB_f2 = (f2_est - f2_pop)/f2_pop,
RB_f3 = (f3_est - f3_pop)/f3_pop,
MSE_f1 = (f1_est - f1_pop)^2,
MSE_f2 = (f2_est - f2_pop)^2,
MSE_f2 = (f3_est - f3_pop)^2) %>%
select(uid, r, estimator, subiid,
RB_f1, RB_f2, RB_f3,
MSE_f1, MSE_f2, MSE_f3)
joined_theta <- left_join(est_theta_all2, poptheta_all,
by = c("unicom"),
suffix = c("_est", "_pop"))%>%
mutate(RB_f1 = (f1_est - f1_pop)/f1_pop,
RB_f2 = (f2_est - f2_pop)/f2_pop,
RB_f3 = (f3_est - f3_pop)/f3_pop,
MSE_f1 = (f1_est - f1_pop)^2,
MSE_f2 = (f2_est - f2_pop)^2,
MSE_f3 = (f3_est - f3_pop)^2) %>%
select(uid, r, estimator, subiid,
RB_f1, RB_f2, RB_f3,
MSE_f1, MSE_f2, MSE_f3)
# Add average across factors RB
joined_theta$ARB_f <- joined_theta %>%
select(RB_f1, RB_f2, RB_f3) %>%
rowMeans()
# Add average across factors for MSE
joined_theta$MSE_f <- joined_theta %>%
select(MSE_f1, MSE_f2, MSE_f3)
head(joined_theta)
joined_theta <- left_join(est_theta_all2, poptheta_all,
by = c("unicom"),
suffix = c("_est", "_pop"))%>%
mutate(RB_f1 = (f1_est - f1_pop)/f1_pop,
RB_f2 = (f2_est - f2_pop)/f2_pop,
RB_f3 = (f3_est - f3_pop)/f3_pop,
MSE_f1 = (f1_est - f1_pop)^2,
MSE_f2 = (f2_est - f2_pop)^2,
MSE_f3 = (f3_est - f3_pop)^2) %>%
select(uid, r, estimator, subiid,
RB_f1, RB_f2, RB_f3,
MSE_f1, MSE_f2, MSE_f3)
joined_theta$ARB_f <- joined_theta %>%
select(RB_f1, RB_f2, RB_f3) %>%
rowMeans()
# Add average across factors for MSE
joined_theta$MSE_f <- joined_theta %>%
select(MSE_f1, MSE_f2, MSE_f3) %>%
rowMeans()
head(joined_theta)
rm(est_theta_all2)
joined_theta <- left_join(est_theta_all2, poptheta_all,
by = c("unicom"),
suffix = c("_est", "_pop"))%>%
mutate(RB_f1 = (f1_est - f1_pop)/f1_pop,
RB_f2 = (f2_est - f2_pop)/f2_pop,
RB_f3 = (f3_est - f3_pop)/f3_pop,
MSE_f1 = (f1_est - f1_pop)^2,
MSE_f2 = (f2_est - f2_pop)^2,
MSE_f3 = (f3_est - f3_pop)^2) %>%
select(uid, r, estimator, subiid,
RB_f1, RB_f2, RB_f3,
MSE_f1, MSE_f2, MSE_f3)
# Load estimated theta ####
load(paste0(main_dir, "/output/mplus_output/est_theta_all2.Rdata"))
joined_theta <- left_join(est_theta_all2, poptheta_all,
by = c("unicom"),
suffix = c("_est", "_pop"))%>%
mutate(RB_f1 = (f1_est - f1_pop)/f1_pop,
RB_f2 = (f2_est - f2_pop)/f2_pop,
RB_f3 = (f3_est - f3_pop)/f3_pop,
MSE_f1 = (f1_est - f1_pop)^2,
MSE_f2 = (f2_est - f2_pop)^2,
MSE_f3 = (f3_est - f3_pop)^2) %>%
select(uid, r, estimator, subiid,
RB_f1, RB_f2, RB_f3,
MSE_f1, MSE_f2, MSE_f3)
# Add average across factors RB
joined_theta$RB_f <- joined_theta %>%
select(RB_f1, RB_f2, RB_f3) %>%
rowMeans()
# Add average across factors for MSE
joined_theta$MSE_f <- joined_theta %>%
select(MSE_f1, MSE_f2, MSE_f3) %>%
rowMeans()
joined_theta <- joined_theta %>%
select(uid, r, estimator, subiid,
RB_f,
MSE_f)
joined_theta <- joined_theta %>%
select(uid, r, estimator, subiid,
RB_f,
MSE_f)
rm(est_theta_all2)
rm(poptheta_all)
head(joined_theta)
joined_theta <- joined_theta %>%
group_by(uid, estimator, subiid) %>%
mutate(RB_r = mean(RB_f),
MSE_r = mean(MSE_f)) %>%
select(uid, estimator, subiid,
RB_r, MSE_r) %>%
distinct()
head(joined_theta)
4200 *24
(300+600+1200)*2
(300+600+1200)*2*6
(300+600+1200)*2*12
(300+600+1200)*2*12*4
summary(joined_theta)
(300+600+1200)*2
# Load estimated theta ####
load(paste0(main_dir, "/output/mplus_output/est_theta_all2.Rdata"))
# load pop thetas ####
load(paste0(main_dir, "/output/thetas", "/poptheta_all.RData"))
joined_theta <- left_join(est_theta_all2, poptheta_all,
by = c("unicom"),
suffix = c("_est", "_pop"))%>%
mutate(RB_f1 = (f1_est - f1_pop)/f1_pop,
RB_f2 = (f2_est - f2_pop)/f2_pop,
RB_f3 = (f3_est - f3_pop)/f3_pop,
MSE_f1 = (f1_est - f1_pop)^2,
MSE_f2 = (f2_est - f2_pop)^2,
MSE_f3 = (f3_est - f3_pop)^2) %>%
select(uid, r, estimator, subiid,
RB_f1, RB_f2, RB_f3,
MSE_f1, MSE_f2, MSE_f3)
# Add average across factors RB
joined_theta$RB_f <- joined_theta %>%
select(RB_f1, RB_f2, RB_f3) %>%
rowMeans()
# Add average across factors for MSE
joined_theta$MSE_f <- joined_theta %>%
select(MSE_f1, MSE_f2, MSE_f3) %>%
rowMeans()
head(joined_theta)
joined_theta <- joined_theta %>%
select(uid, r, estimator, subiid,
RB_f,
MSE_f)
head(joined_theta)
joined_theta2 <- joined_theta %>%
group_by(uid, estimator, subiid) %>%
mutate(RB_r = mean(RB_f),
MSE_r = mean(MSE_f)) %>%
select(uid, estimator, subiid,
RB_r, MSE_r) %>%
distinct()
rm(est_theta_all2)
rm(poptheta_all)
67200/2
67200/4
67200/8
67200/12
# total sample
(300+600+1200)*2 # 2 is theta distribution
# total observations
(300+600+1200)*2*8
# total observations
(300+600+1200)*2*12
# total observations
(300+600+1200)*2*16
# total observations
(300+600+1200)*2*12
# total observations
(300+600+1200)*2*12*4
# total observations
(300+600+1200)*2*4*4
24/6
# total observations
# All conditions: theta dist (2) x sample (3) x item dist (2) x loadings (2)
# These people are from two theta dist. and three sample sizes: 2 x 3
# conditions left: 2 x 3 x 2 x 2 /2 x 3 = 2 x 2
# estimators: 4
(300+600+1200)*2*(2*2)*4
# total observations
# All conditions: theta dist (2) x sample (3) x item dist (2) x loadings (2)
# These people are from two theta dist. and three sample sizes: 2 x 3
# conditions left: 2 x 3 x 2 x 2 /2 x 3 = 2 x 2
# estimators: 4
# obs. per one estimators
(300+600+1200)*2*(2*2)
# obs. for four estimators
(300+600+1200)*2*(2*2)*4
head(joined_theta)
joined_theta2 <- joined_theta %>%
group_by(uid, estimator, subiid) %>%
mutate(RB_r = mean(RB_f),
MSE_r = mean(MSE_f)) %>%
select(uid, estimator, subiid,
RB_r, MSE_r) %>%
distinct()
head(joined_theta)
head(joined_theta)
joined_theta2 <- joined_theta %>%
group_by(uid, estimator, subiid) %>%
mutate(RB_r = mean(RB_f),
MSE_r = mean(MSE_f)) %>%
select(uid, estimator, subiid,
RB_r, MSE_r) %>%
distinct()
head(joined_theta2)
head(joined_theta)
head(joined_theta2)
rm(joined_theta)
library(stringr)
load("G:/My Drive/CLASSES/0000_Dissertation/2_data_generation_production/data/t7_output/folders.Rdata")
main_effects <- as.data.frame(str_split_fixed(folders, "_", 5))
names(main_effects) <- c("uid", "sample", "theta_dis", "loadings", "item_dis")
main_effects$uid <- gsub("C", "", main_effects$uid)
main_effects$sample <- gsub("N", "", main_effects$sample)
main_effects$loadings <- gsub("LLO", "Low", main_effects$loadings)
main_effects$loadings <- gsub("LHI", "High", main_effects$loadings)
main_effects$item_dis <- gsub("INORM", "N", main_effects$item_dis)
main_effects$item_dis <- gsub("IMSKE", "S", main_effects$item_dis)
main_effects$theta_dis <- gsub("NS", "MNS", main_effects$theta_dis)
main_effects
View(main_effects)
main_effects$sample <- as.numeric(main_effects$sample)
View(main_effects)
main_effects$uid <- as.numeric(main_effects$uid)
View(main_effects)
typeof(joined_theta2$uid)
joined_theta2$uid <- as.numeric(joined_theta$uid)
joined_theta2$uid <- as.numeric(joined_theta2$uid)
joined_theta3 <- inner_join(joined_theta2, main_effects,
by = c("uid"))
head(joined_theta3)
joined_theta3 <- inner_join(joined_theta2, main_effects,
by = c("uid")) %>%
select(uid, subiid, sammple, theta_dis, loadings, item_dis, estimator)
joined_theta3 <- inner_join(joined_theta2, main_effects,
by = c("uid")) %>%
select(uid, subiid, sample, theta_dis, loadings, item_dis, estimator)
head(joined_theta3)
joined_theta3 <- inner_join(joined_theta2, main_effects,
by = c("uid")) %>%
select(uid, subiid, sample, theta_dis, loadings, item_dis, estimator,
RB_r, MSE_r)
head(joined_theta3)
theta_final <- inner_join(joined_theta2, main_effects,
by = c("uid")) %>%
select(uid, subiid, sample, theta_dis, loadings, item_dis, estimator,
RB_r, MSE_r)
head(theta_final)
# Save the results ####
output_dir <- "G:/My Drive/CLASSES/0000_Dissertation/2_data_generation_production/output/forSAS"
save(theta_final,
file = paste0(output_dir, "/theta_final.Rdata"))
# Excel output
write.csv(theta_final,
file = paste0(output_dir, "/theta_final.csv"))
long_avg_theta <- inner_join(joined_theta2, main_effects,
by = c("uid")) %>%
select(uid, subiid, sample, theta_dis, loadings, item_dis, estimator,
RB_r, MSE_r)
head(long_avg_theta)
# Excel output
write.csv(long_avg_theta,
file = paste0(output_dir, "/long_avg_theta.csv"))
save(long_avg_theta,
file = paste0(output_dir, "/long_avg_theta.Rdata"))
install.packages("tinytex")
# tools for making an R function
#install.packages('devtools')
library(devtools) # for creating an R package
# tools for documenting your functions
#install.packages('roxygen2')
library(roxygen2) # for documentation
#install.packages("Rdpack")
library("Rdpack") # for adding references
# get project director
proj_get()
proj_dir <- "G:/My Drive/000_Projects/8_creating R packages"
# set project directory
# This is to make sure we work in the right project folder
proj_set(paste0(proj_dir, "/AUTTT"), force=FALSE)
# run the function below. #
setwd(paste0(proj_dir, "/AUTTT"))
document()
# use load_all() to view documentations
devtools::load_all()
# Or use a function
#setwd("..")
devtools::build(pkg = "AUTTT",
path = "00_Projects/8_creating R packages",
binary = FALSE,
vignettes = FALSE
)
library(devtools)
# Or use a function
#setwd("..")
devtools::build(pkg = "AUTTT",
path = "00_Projects/8_creating R packages",
binary = FALSE,
vignettes = FALSE
)
