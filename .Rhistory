degree_level.x %in% c("A", "B", "CERTIFICATE") & degree_level.y == "Unknown" ~ degree_level.x,
degree_level.x == "Unknown" & degree_level.y %in% c("CERTIFICATE", "A", "B") ~ degree_level.y),
degree_major1 = case_when(degree_level.x == "A" & degree_level.y == "B"~ Last_DegreeMajor1,
degree_level.x == "Unknown" & degree_level.y == "Unknown" ~ "Unknown",
degree_level.x == degree_level.y ~ First_DegreeMajor1,
degree_level.x == "A" & degree_level.y == "CERTIFICATE" ~ First_DegreeMajor1,
degree_level.x == "CERTIFICATE" & degree_level.y %in% c("A", "B") ~ Last_DegreeMajor1,
degree_level.x == "B" ~ First_DegreeMajor1,
degree_level.x %in% c("A", "B", "CERTIFICATE") & degree_level.y == "Unknown" ~ First_DegreeMajor1,
degree_level.x == "Unknown" & degree_level.y %in% c("CERTIFICATE", "A", "B") ~ Last_DegreeMajor1
)) %>%
mutate(CIP = case_when(is.na(DegreeCIP1.x) & !is.na(DegreeCIP1.y) ~ DegreeCIP1.y,
!is.na(DegreeCIP1.x) ~ DegreeCIP1.x)) %>%
select(PERSON_UID, Graduated, degree_level, degree_major1, CIP)
head(grad)
# Step 6: join 3 data set
join1 <- left_join(data_a, enr2_final, by = "PERSON_UID") %>%
left_join(., major1[,c(1,3:4, 6)], by = "PERSON_UID") %>%
left_join(., grad, by = "PERSON_UID")
head(data_a)
head(join1)
View(join1)
join1[is.na(join1)] <- "N/A"
View(join1)
join2 <- join1 %>%
mutate(EnrollmentMajor1 = case_when(EnrollmentBegin == "N/A" ~ "N/A",
EnrollmentMajor1==""~ "Unknown",
TRUE~EnrollmentMajor1),
EnrollmentBegin = case_when(IN_HES=="N" & EnrollmentBegin != "N/A"~"N/A",
TRUE~EnrollmentBegin),
EnrollmentMajor1 = case_when(IN_HES=="N" & EnrollmentMajor1 != "N/A"~"N/A",
TRUE~EnrollmentMajor1),
X2year4year = case_when(IN_HES=="N" & X2year4year != "N/A"~"N/A",
TRUE ~ X2year4year),
Graduated = case_when(Graduated != "Y" & EnrollmentBegin != "N/A"~"N",
TRUE ~ Graduated)
)
View(join2)
data_cross <- join2
# write data out in xlsx ####
writexl::write_xlsx(data_cross,
paste0(output_dir, "/data_cross.xlsx"))
save(data_cross, file = paste0(output_dir, "/data_cross.Rdata"))
data_cross_enr <- data_cross %>%
filter(POST_DISMISSAL_STATUS == "RE-ENROLLED") %>%
select(POST_DISMISSAL_STATUS, WMU_GRAD_STATUS) %>%
table()
save(data_cross, file = paste0(output_dir, "/data_cross.Rdata"))
# write data out in xlsx ####
writexl::write_xlsx(data_cross,
paste0(output_dir, "/data_cross.xlsx"))
data_cross_enr <- data_cross %>%
filter(POST_DISMISSAL_STATUS == "RE-ENROLLED") %>%
select(POST_DISMISSAL_STATUS, WMU_GRAD_STATUS) %>%
table()
tb1 <- data_cross %>%
count()
# Students who were part of NSC search
ceas_sample <- data_cross %>%
filter(WMU_GRAD_STATUS == "N" & SEARCH_DATE <= 20210630) %>%
count()
xtb1 <- as.data.frame(xtabs(~ #STUDENT_CAT_DESC+
POST_DISMISSAL_STATUS+
WMU_GRAD_STATUS,
data = data_cross)) %>%
arrange(POST_DISMISSAL_STATUS) %>%
filter(Freq >0) %>%
group_by(POST_DISMISSAL_STATUS) %>%
summarise(y = sum(Freq))
save(xtb1, file = paste0(output_dir, "/xtb1.RData"))
# Bar chart
graph1 <- ggplot(xtb1, aes(x=POST_DISMISSAL_STATUS, y = y))+
geom_bar(stat = "identity", fill=c("#532E1F"))+ # add another color if want two different colors
geom_text(aes(label=y), vjust=1.6, color=c("white"), size = 3.5)+
labs(title = "The Numbers of Re-Enrolled and Not Re-enrolled Students",
x = "Enrollment Status after Dismissal",
y = "Headcount")
graph1
# Stacked bar
xtb1_mod <- xtb1 %>%
mutate(y_p = round(100*y/sum(y),3),
stack_cat = c("Dismissed Students")) %>%
select(stack_cat, POST_DISMISSAL_STATUS, y, y_p)
graph1 <- ggplot(data = xtb1_mod, aes(x=stack_cat, y = y, fill = POST_DISMISSAL_STATUS))+
geom_bar(stat = "identity", width = 0.40)+
scale_fill_manual(values = c("#532E1F", "#F1C500"),
labels = c("Not re-enrolled", "Re-enrolled"))+
geom_text(aes(label=paste0(y, " (", y_p, "%)")),
hjust = 0.5,
vjust = 3,
position = "stack",
color=c("white", "black"),
size = 3.5)+
labs(title = "The Number of Dismissed Students by Re-enrollment Status",
x = "",
y = "Headcount")+
theme_minimal() +
theme(
plot.title = element_text(size = 10),
plot.caption = element_text(size = 10),
legend.title = element_text(size = 10),
legend.key.size = unit(.35, "cm"),
axis.title = element_text(size = 10),
axis.text = element_text(size = 10),
axis.text.y = element_text(lineheight = 1.3),
axis.ticks.y = element_blank(),
#legend.position = c(1, 0.2)
)+
guides(fill = guide_legend(title="Re-enrollment Status"))
graph1
graph1 <- ggplot(data = xtb1_mod, aes(x=stack_cat, y = y, fill = POST_DISMISSAL_STATUS))+
geom_bar(stat = "identity", width = 0.40)+
scale_fill_manual(values = c("#532E1F", "#F1C500"),
labels = c("Not re-enrolled", "Re-enrolled"))+
geom_text(aes(label=paste0(y, " (", y_p, "%)")),
hjust = 0.5,
vjust = 3,
position = "stack",
color=c("white", "black"),
size = 3.5)+
labs(title = "The Number of Dismissed Students by Re-enrollment Status",
x = "",
y = "Headcount")+
theme_minimal() +
theme(
plot.title = element_text(size = 10),
plot.caption = element_text(size = 10),
legend.title = element_text(size = 10),
legend.key.size = unit(.35, "cm"),
axis.title = element_text(size = 10),
axis.text = element_text(size = 10),
axis.text.y = element_text(lineheight = 1.3),
axis.ticks.y = element_blank(),
#legend.position = c(1, 0.2)
)+
guides(fill = guide_legend(title="Re-enrollment Status"))
graph1
# Q2 2. How many dismissed students re-enrolled at WMU and then graduated from WMU,...####
# left WMU and graduated elsewhere, or left higher education (without a degree)?
# re-enrolled by graduation status
xtb2 <- as.data.frame(xtabs(~ #STUDENT_CAT_DESC+
POST_DISMISSAL_STATUS+
WMU_GRAD_STATUS+
Graduated,
data = data_cross)) %>%
arrange(Graduated) %>%
filter(Freq >0 & POST_DISMISSAL_STATUS != "NOT RE-ENROLLED")
xtb2$WMU_GRAD_STATUS <- as.character(xtb2$WMU_GRAD_STATUS)
xtb2$Graduated <- as.character(xtb2$Graduated)
xtb2[xtb2 == "N/A"] <- "N"
xtb2.1 <- xtb2 %>%
group_by(POST_DISMISSAL_STATUS, WMU_GRAD_STATUS, Graduated) %>%
summarise(Freq=sum(Freq)) %>%
mutate(Type = case_when(WMU_GRAD_STATUS == "Y" & Graduated == "N" ~ "Graduated from WMU",
WMU_GRAD_STATUS == "N" & Graduated == "Y" ~ "Graduated Elsewhere",
WMU_GRAD_STATUS == "N" & Graduated == "N" ~ "Left Higher Education"))
graph2 <- ggplot(xtb2.1, aes(x=Type, y = Freq))+
geom_bar(stat = "identity", fill=c("#532E1F"))+
geom_text(aes(label=Freq), vjust=1.6, color=c("white"), size = 3.5)+
scale_fill_brewer(palette="Paired")+
labs(title = "Graduation Headcounts of Students Who Re-Enrolled at WMU",
x = "Category",
y = "Headcount")+
theme(legend.text=element_text(size=10),
legend.title=element_text(size=10))+
guides(fill = guide_legend(title="Legend"))
# stacked bar
xtb2.2 <- as.data.frame(xtb2.1) %>%
mutate(Total = sum(Freq),
Percent = round(100*Freq/Total,1))
graph2 <-
ggplot(data = xtb2.2, aes(x=POST_DISMISSAL_STATUS, y = Freq, fill = Type))+
geom_bar(stat = "identity", width = 0.4)+
scale_fill_manual(values = c("#532E1F", "#F1C500", "#8B7F79"))+
geom_text(aes(label=paste0(Freq, " (", Percent, "%)")),
hjust = 0.5,
vjust = 3,
position = "stack",
color=c("black", "white", "black"),
check_overlap = FALSE,
size = 3.5)+
labs(title = "The Number of Re-Enrolled Students by Outcome",
x = "",
y = "Headcount")+
theme_minimal() +
theme(
plot.title = element_text(size = 10),
plot.caption = element_text(size = 10),
legend.title = element_text(size = 10),
legend.key.size = unit(.35, "cm"),
axis.title = element_text(size = 10),
axis.text = element_text(size = 10),
axis.text.y = element_text(lineheight = 1.3),
axis.ticks.y = element_blank()
#legend.position = c(1, 0.2)
)+
guides(fill = guide_legend(title="Outcome"))
save(graph2, file = paste0(output_dir, "/graph2.RData"))
# Preparing data for Sanke Chart ####
# Working on
# Re-enrolled Major --> WMU Graduation Major
# Re-enrolled Major --> Elsewhere Graduation Major
# Re-enrolled Major --> Left Higher Education
load(paste0(output_dir, "/data_cross.RData"))
head(data_cross)
# Combine pre major with major
WMU_enrollment_MAJOR_NOPre <- gsub("Pre-", "", data_cross$MAJOR_DESC)
WMU_enrollment_MAJOR_NOPre <- gsub("PRE-", "", WMU_enrollment_MAJOR_NOPre)
WMU_enrollment_MAJOR_NOPre <- gsub("COMPUTER SCIENCE: GENERAL", "Computer Science", WMU_enrollment_MAJOR_NOPre)
GRAD_MAJOR_modified <- gsub("COMPUTER SCIENCE: GENERAL", "Computer Science", data_cross$GRAD_MAJOR)
data_cross2 <- cbind(data_cross, WMU_enrollment_MAJOR_NOPre, GRAD_MAJOR_modified)
sanke_data1 <- as.data.frame(xtabs(~WMU_enrollment_MAJOR_NOPre +
GRAD_MAJOR_modified,
data = data_cross2)) %>%
filter(Freq >0) %>%
filter(GRAD_MAJOR_modified != "N/A") %>%
arrange(WMU_enrollment_MAJOR_NOPre, GRAD_MAJOR_modified)
head(data_cross)
head(data_cross2)
# Group the right side by cipcode (2 digits)
head(data_cross2) # crosstab data
sanke_major2 <- as.data.frame(xtabs(~POST_DISMISSAL_STATUS+
WMU_enrollment_MAJOR_NOPre +
WMU_GRAD_STATUS+
Graduated+
degree_major1,
CIP,
data = data_cross2)) %>%
filter(Freq >0) %>%
filter(POST_DISMISSAL_STATUS == "RE-ENROLLED") %>%
filter(Graduated == "Y") %>%
filter(WMU_GRAD_STATUS == "N") %>%
filter(degree_major1 != "N/A") %>%
arrange(WMU_enrollment_MAJOR_NOPre, degree_major1) %>%
group_by(WMU_enrollment_MAJOR_NOPre) %>%
mutate(Proportion = round(Freq/sum(Freq), 2)) %>%
select(WMU_enrollment_MAJOR_NOPre, degree_major1, Freq, Proportion)
View(data_cross2)
sanke_major2 <- as.data.frame(xtabs(~POST_DISMISSAL_STATUS+
WMU_enrollment_MAJOR_NOPre +
WMU_GRAD_STATUS+
Graduated+
degree_major1,
#CIP,
data = data_cross2)) %>%
filter(Freq >0) %>%
filter(POST_DISMISSAL_STATUS == "RE-ENROLLED") %>%
filter(Graduated == "Y") %>%
filter(WMU_GRAD_STATUS == "N") %>%
filter(degree_major1 != "N/A") %>%
arrange(WMU_enrollment_MAJOR_NOPre, degree_major1) %>%
group_by(WMU_enrollment_MAJOR_NOPre) %>%
mutate(Proportion = round(Freq/sum(Freq), 2)) %>%
select(WMU_enrollment_MAJOR_NOPre, degree_major1, Freq, Proportion)
sanke_major2 <- as.data.frame(xtabs(~POST_DISMISSAL_STATUS+
WMU_enrollment_MAJOR_NOPre +
WMU_GRAD_STATUS+
Graduated+
degree_major1,
CIP,
data = data_cross2)) %>%
filter(Freq >0) %>%
filter(POST_DISMISSAL_STATUS == "RE-ENROLLED") %>%
filter(Graduated == "Y") %>%
filter(WMU_GRAD_STATUS == "N") %>%
filter(degree_major1 != "N/A") %>%
arrange(WMU_enrollment_MAJOR_NOPre, degree_major1) %>%
group_by(WMU_enrollment_MAJOR_NOPre) %>%
mutate(Proportion = round(Freq/sum(Freq), 2)) %>%
select(WMU_enrollment_MAJOR_NOPre, degree_major1, Freq, Proportion)
# Group the right side by cipcode (2 digits)
head(data_cross2) # crosstab data
# Preparing data for Sanke chart
head(data_cross2)
sanke_major2 <- as.data.frame(xtabs(~POST_DISMISSAL_STATUS+
WMU_enrollment_MAJOR_NOPre +
WMU_GRAD_STATUS+
Graduated+
degree_major1,
CIP,
data = data_cross2)) %>%
filter(Freq >0) %>%
filter(POST_DISMISSAL_STATUS == "RE-ENROLLED") %>%
filter(Graduated == "Y") %>%
filter(WMU_GRAD_STATUS == "N") %>%
filter(degree_major1 != "N/A") %>%
arrange(WMU_enrollment_MAJOR_NOPre, degree_major1) %>%
group_by(WMU_enrollment_MAJOR_NOPre) %>%
mutate(Proportion = round(Freq/sum(Freq), 2)) %>%
select(WMU_enrollment_MAJOR_NOPre, degree_major1, Freq, Proportion)
sanke_major2 <- as.data.frame(xtabs(~POST_DISMISSAL_STATUS+
WMU_enrollment_MAJOR_NOPre +
WMU_GRAD_STATUS+
Graduated+
degree_major1,
#CIP,
data = data_cross2)) %>%
filter(Freq >0) %>%
filter(POST_DISMISSAL_STATUS == "RE-ENROLLED") %>%
filter(Graduated == "Y") %>%
filter(WMU_GRAD_STATUS == "N") %>%
filter(degree_major1 != "N/A") %>%
arrange(WMU_enrollment_MAJOR_NOPre, degree_major1) %>%
group_by(WMU_enrollment_MAJOR_NOPre) %>%
mutate(Proportion = round(Freq/sum(Freq), 2)) %>%
select(WMU_enrollment_MAJOR_NOPre, degree_major1, Freq, Proportion)
sanke_major2 <- as.data.frame(xtabs(~POST_DISMISSAL_STATUS+
WMU_enrollment_MAJOR_NOPre +
WMU_GRAD_STATUS+
Graduated+
degree_major1+
CIP,
data = data_cross2)) %>%
filter(Freq >0) %>%
filter(POST_DISMISSAL_STATUS == "RE-ENROLLED") %>%
filter(Graduated == "Y") %>%
filter(WMU_GRAD_STATUS == "N") %>%
filter(degree_major1 != "N/A") %>%
arrange(WMU_enrollment_MAJOR_NOPre, degree_major1) %>%
group_by(WMU_enrollment_MAJOR_NOPre) %>%
mutate(Proportion = round(Freq/sum(Freq), 2)) %>%
select(WMU_enrollment_MAJOR_NOPre, degree_major1, Freq, Proportion)
sanke_major2
sanke_major2 <- as.data.frame(xtabs(~POST_DISMISSAL_STATUS+
WMU_enrollment_MAJOR_NOPre +
WMU_GRAD_STATUS+
Graduated+
degree_major1+
CIP,
data = data_cross2)) %>%
filter(Freq >0) %>%
filter(POST_DISMISSAL_STATUS == "RE-ENROLLED") %>%
filter(Graduated == "Y") %>%
filter(WMU_GRAD_STATUS == "N") %>%
filter(degree_major1 != "N/A") %>%
arrange(WMU_enrollment_MAJOR_NOPre, degree_major1) %>%
group_by(WMU_enrollment_MAJOR_NOPre) %>%
mutate(Proportion = round(Freq/sum(Freq), 2)) %>%
select(WMU_enrollment_MAJOR_NOPre, degree_major1, CIP, Freq, Proportion)
sanke_major2
View(sanke_major2)
head(sanke_major2)
?stringsub
?str_sub
library(stringr)
?str_sub
stringr(sanke_major2$CIP, 1, 2)
str_sub(sanke_major2$CIP, 1, 2)
CIP2 <- str_sub(sanke_major2$CIP, 1, 2)
CIP2
CIP4 <- str_sub(sanke_major2$CIP, 1, 4)
CIP4
CIP2 <- sub("N/", "", CIP2)
CIP2
CIP2 <- sub("N/", "N/A", CIP2)
CIP2
CIP2 <- str_sub(sanke_major2$CIP, 1, 2)
CIP2 <- sub("N/", "N/A", CIP2)
CIP2
CIP4 <- str_sub(sanke_major2$CIP, 1, 4)
CIP4
#View(join2)
head(join2)
CIP2 <- str_sub(join2$CIP, 1, 2)
CIP2 <- sub("N/", "N/A", CIP2)
CIP2
CIP4 <- str_sub(join2$CIP, 1, 4)
CIP4
join3 <- cbind(join2, CIP2, CIP4)
head(join3)
View(join3)
data_cross <- join3
# write data out in xlsx ####
writexl::write_xlsx(data_cross,
paste0(output_dir, "/data_cross.xlsx"))
save(data_cross, file = paste0(output_dir, "/data_cross.Rdata"))
# Preparing data for Sanke Chart ####
# Working on
# Re-enrolled Major --> WMU Graduation Major
# Re-enrolled Major --> Elsewhere Graduation Major
# Re-enrolled Major --> Left Higher Education
load(paste0(output_dir, "/data_cross.RData"))
head(data_cross)
# Combine pre major with major
WMU_enrollment_MAJOR_NOPre <- gsub("Pre-", "", data_cross$MAJOR_DESC)
WMU_enrollment_MAJOR_NOPre <- gsub("PRE-", "", WMU_enrollment_MAJOR_NOPre)
WMU_enrollment_MAJOR_NOPre <- gsub("COMPUTER SCIENCE: GENERAL", "Computer Science", WMU_enrollment_MAJOR_NOPre)
GRAD_MAJOR_modified <- gsub("COMPUTER SCIENCE: GENERAL", "Computer Science", data_cross$GRAD_MAJOR)
data_cross2 <- cbind(data_cross, WMU_enrollment_MAJOR_NOPre, GRAD_MAJOR_modified)
head(data_cross2)
drv <- dbDriver("Oracle")
con <- dbConnect(drv,
username = key_get("WMU_NetID", keyring="Oracle2"),
password = key_get("Oracle_pw", keyring="Oracle2"),
dbname = "BODSP")
# Get D students between 2007 and 2016 from the table ceas_temp_bo
# we must remove futures search_date
# This is everyone.
y3 <- dbGetQuery(con,
"
select distinct CIPCODE
,CIPCODE_GROUP_CODE
,CIPCODE_GROUP_DESC
from wmudev.wdt_major_wmu
order by CIPCODE_GROUP_CODE;
")
# Get D students between 2007 and 2016 from the table ceas_temp_bo
# we must remove futures search_date
# This is everyone.
y3 <- dbGetQuery(con,
"select distinct CIPCODE
,CIPCODE_GROUP_CODE
,CIPCODE_GROUP_DESC
from wmudev.wdt_major_wmu
order by CIPCODE_GROUP_CODE;"
)
drv <- dbDriver("Oracle")
con <- dbConnect(drv,
username = key_get("WMU_NetID", keyring="Oracle2"),
password = key_get("Oracle_pw", keyring="Oracle2"),
dbname = "BODSP")
# Get D students between 2007 and 2016 from the table ceas_temp_bo
# we must remove futures search_date
# This is everyone.
y3 <- dbGetQuery(con,
"select distinct CIPCODE
,CIPCODE_GROUP_CODE
,CIPCODE_GROUP_DESC
from wmudev.wdt_major_wmu
order by CIPCODE_GROUP_CODE;"
)
# Get D students between 2007 and 2016 from the table ceas_temp_bo
# we must remove futures search_date
# This is everyone.
y3 <- dbGetQuery(con,
"select distinct CIPCODE,
CIPCODE_GROUP_CODE,
CIPCODE_GROUP_DESC
from wmudev.wdt_major_wmu
order by CIPCODE_GROUP_CODE;"
)
# Get D students between 2007 and 2016 from the table ceas_temp_bo
# we must remove futures search_date
# This is everyone.
y3 <- dbGetQuery(con,
"select distinct CIPCODE, CIPCODE_GROUP_CODE, CIPCODE_GROUP_DESC
from wmudev.wdt_major_wmu
order by CIPCODE_GROUP_CODE;"
)
# Get D students between 2007 and 2016 from the table ceas_temp_bo
# we must remove futures search_date
# This is everyone.
y3 <- dbGetQuery(con,
"select distinct CIPCODE, CIPCODE_GROUP_CODE, CIPCODE_GROUP_DESC
from wmudev.wdt_major_wmu
order by CIPCODE_GROUP_CODE"
)
y3
# Get D students between 2007 and 2016 from the table ceas_temp_bo
# we must remove futures search_date
# This is everyone.
y3 <- dbGetQuery(con,
"select distinct CIPCODE
, CIPCODE_GROUP_CODE
, CIPCODE_GROUP_DESC
from wmudev.wdt_major_wmu
order by CIPCODE_GROUP_CODE"
)
y3
# Get D students between 2007 and 2016 from the table ceas_temp_bo
# we must remove futures search_date
# This is everyone.
y3 <- dbGetQuery(con,
"select distinct CIPCODE_GROUP_CODE
, CIPCODE_GROUP_DESC
from wmudev.wdt_major_wmu
order by CIPCODE_GROUP_CODE"
)
y3
# Get D students between 2007 and 2016 from the table ceas_temp_bo
# we must remove futures search_date
# This is everyone.
y3 <- dbGetQuery(con,
"select distinct CIPCODE_GROUP_CODE
, CIPCODE_GROUP_DESC
from wmudev.wdt_major_wmu
where CIPCODE_GROUP_CODE IS NOT NULL
order by CIPCODE_GROUP_CODE"
)
y3
names(y2) <- c("CIP2", "CIP2_DESC")
head(y2)
names(y3) <- c("CIP2", "CIP2_DESC")
head(y3)
join3 <- cbind(join2, CIP2, CIP4)
join4 <- left_join(join3, y3, by = "CIP2")
head(join4)
View(join4)
data_cross <- join4
# write data out in xlsx ####
writexl::write_xlsx(data_cross,
paste0(output_dir, "/data_cross.xlsx"))
save(data_cross, file = paste0(output_dir, "/data_cross.Rdata"))
head(data_cross)
# >>>>making data_cross2 ####
# Combine pre major with major
WMU_enrollment_MAJOR_NOPre <- gsub("Pre-", "", data_cross$MAJOR_DESC)
WMU_enrollment_MAJOR_NOPre <- gsub("PRE-", "", WMU_enrollment_MAJOR_NOPre)
WMU_enrollment_MAJOR_NOPre <- gsub("COMPUTER SCIENCE: GENERAL", "Computer Science", WMU_enrollment_MAJOR_NOPre)
GRAD_MAJOR_modified <- gsub("COMPUTER SCIENCE: GENERAL", "Computer Science", data_cross$GRAD_MAJOR)
data_cross2 <- cbind(data_cross, WMU_enrollment_MAJOR_NOPre, GRAD_MAJOR_modified)
head(data_cross2)
